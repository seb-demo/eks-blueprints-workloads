apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  labels:
    app: argocd-{{ .Values.spec.env }}
    team: burnham
  annotations:
{{ if eq .Values.spec.ingress.type "nginx" }}
    #nginx annotations
{{ else }}
  {{ if .Values.spec.ingress.host }}  # we can't use grouping without custom domain
    alb.ingress.kubernetes.io/group.name: burnham
  {{ end }}
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: 'ip'
  {{ if .Values.spec.ingress.host }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
  {{ else }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  {{ end }}
  {{ if eq .Values.spec.ingress.host "cdk" }}
    alb.ingress.kubernetes.io/backend-protocol: 'HTTP'
  {{ else }}
    alb.ingress.kubernetes.io/backend-protocol: 'HTTPS'
  {{ end }}
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=Burnham
{{ end }}
    link.argocd.argoproj.io/external-link: 'https://eu-west-3.console.aws.amazon.com/cloudwatch/home?region=eu-west-3#container-insights:performance'

spec:
{{ if eq .Values.spec.ingress.type "nginx" }}
  kubernetes.io/ingress.class: "nginx"
{{ else }}
  ingressClassName: alb
{{ end }}
  rules:
{{ if .Values.spec.ingress.host }}
    - host: argocd.{{ .Values.spec.ingress.host }}
{{ else }}
    - host:
{{ end }}  
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
{{ if eq .Values.spec.ingress.host "cdk" }}
                name: blueprints-addon-argocd-server
{{ else }}
                name: argo-cd-argocd-server
{{ end }}
                port:
                  number: 80
